# Generated by Django 3.1.2 on 2021-05-10 16:22

import core.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactFormBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', editable=False, max_length=80, verbose_name='First Name')),
                ('last_name', models.CharField(default='', editable=False, max_length=80, verbose_name='Last Name')),
                ('affiliation', models.CharField(blank=True, default='', editable=False, max_length=150, null=True, verbose_name='Affiliate Organization')),
                ('thoughts', models.TextField(blank=True, default='', editable=False, null=True, verbose_name='Additional Thoughts/Questions/Concerns')),
                ('reviewed', models.BooleanField(default=False, editable=False, verbose_name='Form Reviewed?')),
                ('ignored', models.BooleanField(default=False, editable=False, verbose_name='Ignored?')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_contact.contactformbase_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='EventOrganizerContactForm',
            fields=[
                ('contactformbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contact.contactformbase')),
                ('event_type', models.CharField(default='', editable=False, max_length=120, verbose_name='Type of Event to Organize')),
                ('financial_assistance', models.BooleanField(default=False, editable=False, verbose_name='Financial Assistance from Club Required?')),
                ('min_attendees', models.PositiveSmallIntegerField(default=1, editable=False, null=True, verbose_name='Estimated/Desired Minimum Number of Attendees')),
                ('max_attendees', models.PositiveSmallIntegerField(default=1, editable=False, null=True, verbose_name='Estimated/Desired Maximum Number of Attendees')),
                ('advertising', models.TextField(default='', editable=False, verbose_name='Event Advertising Campaign Information')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('contact.contactformbase',),
        ),
        migrations.CreateModel(
            name='GuestSpeakerContactForm',
            fields=[
                ('contactformbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contact.contactformbase')),
                ('topic', models.CharField(default='', editable=False, max_length=250, verbose_name='Presentation Topic')),
                ('availability', models.JSONField(default=list, editable=False, validators=[core.validators.JSONSchemaValidator(limit_value={'items': {'title': 'Date/Time of Availability'}, 'maxItems': 3, 'schema': 'http://json-schema.org/draft-07/schema#', 'title': 'Availability', 'type': 'array'})], verbose_name='Availability')),
                ('length', models.PositiveSmallIntegerField(default=1, editable=False, verbose_name='Presentation Length')),
                ('visual_aids', models.CharField(blank=True, default='', editable=False, max_length=300, null=True, verbose_name='Prepared Visual Aids')),
                ('addl_visual_aids', models.CharField(blank=True, default='', editable=False, max_length=300, null=True, verbose_name='Additional Visual Aids Required')),
                ('addl_tech', models.CharField(blank=True, default='', editable=False, max_length=300, null=True, verbose_name='Additional Tech Setup Required')),
                ('consent_audio_rec', models.BooleanField(default=False, editable=False, verbose_name='Consent to Record Audio')),
                ('consent_video_rec', models.BooleanField(default=False, editable=False, verbose_name='Consent to Record Video')),
                ('consent_streaming', models.BooleanField(default=False, editable=False, verbose_name='Consent to Upload Recordings to Streaming Platform(s)')),
                ('consent_materials', models.BooleanField(default=False, editable=False, verbose_name='Consent to Share Presentation Materials With Club Members')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('contact.contactformbase',),
        ),
        migrations.CreateModel(
            name='MentorContactForm',
            fields=[
                ('contactformbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contact.contactformbase')),
                ('students', models.PositiveSmallIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1, 'Number of students too small.'), django.core.validators.MaxValueValidator(6, 'Number of students too large.')], verbose_name='Number of Students to Mentor')),
                ('field_type', models.CharField(default='', editable=False, max_length=60, verbose_name='Type of Field')),
                ('field_name', models.CharField(default='', editable=False, max_length=200, verbose_name='Field/Sector Name')),
                ('field_description', models.TextField(blank=True, default='', editable=False, null=True, verbose_name='Field/Sector Name')),
                ('availability_start', models.DateField(editable=False, verbose_name='Start of Mentorship Availability')),
                ('availability_end', models.DateField(blank=True, editable=False, null=True, verbose_name='End of Mentorship Availability')),
                ('meeting_information', models.JSONField(default=list, editable=False, validators=[core.validators.JSONSchemaValidator(limit_value={'items': {'additionalProperties': False, 'properties': {'time': {'format': 'time', 'title': 'Time Available', 'type': 'string'}, 'weekday': {'enum': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], 'title': 'Day of Week', 'type': 'string'}}, 'required': ['weekday', 'time'], 'title': 'Weekday/Time of Availability', 'type': 'object'}, 'minItems': 1, 'schema': 'http://json-schema.org/draft-07/schema#', 'title': 'Weekly Meeting Availability', 'type': 'array'})], verbose_name='Weekly Meeting Availability')),
                ('weekly_minutes', models.PositiveSmallIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1, 'Number of minutes too small.')], verbose_name='Minutes of Availability Per Week')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('contact.contactformbase',),
        ),
        migrations.CreateModel(
            name='PartnerContactForm',
            fields=[
                ('contactformbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contact.contactformbase')),
                ('commercial', models.BooleanField(default=False, editable=False, verbose_name='Commercial Organization?')),
                ('industry', models.CharField(blank=True, default='', editable=False, max_length=300, null=True, verbose_name='Industries')),
                ('min_org_size', models.PositiveSmallIntegerField(default=1, editable=False, null=True, verbose_name='Estimated Minimum Size of Organization')),
                ('max_org_size', models.PositiveSmallIntegerField(default=1, editable=False, null=True, verbose_name='Estimated Maximum Size of Organization')),
                ('funding', models.BooleanField(default=False, editable=False, verbose_name='Willing/Able to Provide Funding for Club Initiatives')),
                ('initiatives', models.TextField(blank=True, default='', editable=False, null=True, verbose_name='Club Initiatives to Provide Funding For')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('contact.contactformbase',),
        ),
        migrations.CreateModel(
            name='AdminComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', editable=False, max_length=80, verbose_name='First Name')),
                ('last_name', models.CharField(default='', editable=False, max_length=80, verbose_name='Last Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Time/Date Comment Added')),
                ('form_id', models.PositiveIntegerField()),
                ('form_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='comments', to='contenttypes.contenttype')),
            ],
        ),
    ]
